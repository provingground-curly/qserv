docker run -it --rm -u "$(id -u):$(id -g)" -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro -v /home/jgates/work/qserv:/qserv/source qserv/loaderbase:dev 





# file: README
#
#   This folder contains instructions and tools for building a runnable container
#   packed with the Replication System's binaries and their dependent libraries
#
#   NOTES: these instructions assume you're building a container under
#          the following name: 'qserv/replica:tools'
#          This name can be obviously changed to some other name as needed

# Go into a development folder where you normally build Qserv (by running
# the scons tool)

cd /home/user/development/qserv

# Use the previously built development container to collect binaries along
# with their library dependencies at the temporary container build area

docker run \
    --rm \
    -u "$(id -u):$(id -g)" \
    -e "SOURCE=${PWD}" \
    -v /etc/passwd:/etc/passwd:ro \
    -v /etc/group:/etc/group:ro \
    -v $PWD:$PWD \
    qserv/replica:dev \
    bash -c '$SOURCE/admin/tools/docker/replication/container/tools/ncsa/collect.sh $SOURCE'

# Build the runnable container from the previously prepared area

docker build -t qserv/replica:tools tmp/replication/container/build

# (optional) run a few tests to inspect if container content is well formed
# and applications' dependencies are satisfied.

docker run --rm qserv/replica:tools ls -al /qserv/lib
docker run --rm qserv/replica:tools ls -al /qserv/bin
docker run --rm qserv/replica:tools ldd /qserv/bin/qserv-replica-job-chunks
docker run --rm qserv/replica:tools /qserv/bin/qserv-replica-job-chunks


# And, finally - publish the container (provided a proper login into DockerHub was
# made earlier)

docker push qserv/replica:tools

####################################################################
# An alternative method is run the following script wich will do all
# explained above

admin/tools/docker/replication/container/tools/ncsa/build.sh /home/user/development/qserv
